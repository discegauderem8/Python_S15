# üìå–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—É—Ç—å
# –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
# üìå–°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
# üìå–ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç: ‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª, ‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞, ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
# üìå–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.

import argparse
import os
from collections import namedtuple
import logging


logger = logging.getLogger(__name__)
my_format = '{levelname:<10} - {asctime:<20}: {msg}'
logging.basicConfig(filename='mylog.log', filemode='a', encoding='UTF-8',
                    level=logging.INFO, style='{', format=my_format)

def get_dir_info(path: str) -> [namedtuple]:

    result = []
    FileData = namedtuple("FileData", ["name", "extension", "parent_dir"])

    for dirpath, dirnames, filenames in os.walk(path):
        for dirname in dirnames:
            full_path = os.path.join(dirpath, dirname)
            item = FileData(dirname, "folder", full_path.split("\\")[-2])
            result.append(item) #–ü—Ä–∏–º: "\\" –æ–∑–Ω–∞—á–∞–µ—Ç \
            # (–í –ø–∏—Ç–æ–Ω–µ –Ω–µ–ª—å–∑—è –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Å—Ç–æ "\", —Ç–∞–∫ —ç—Ç–æ —Å–∏–º–≤–æ–ª —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è)
            logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–∞—Ç–∞–ª–æ–≥ {item.name} –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {item.parent_dir}")

        for filename in filenames:
            full_path = os.path.join(dirpath, filename)
            item = FileData(filename.split(".")[0], full_path.split(".")[-1], full_path.split("\\")[-2])
            result.append(item)
            logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–π–ª {item.name} c —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º {item.extension} –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {item.parent_dir}")

    return result


parser = argparse.ArgumentParser(description="–ü–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
parser.add_argument("path", metavar=".../.../.../target_folder –∏–ª–∏ ./target_folder", type=str, nargs=1,
                    help="–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã–∑–æ–≤–∏—Ç–µ –µ–µ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞,"
                         "–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–æ –ø–∞–ø–∫–∏")

parsed_args = parser.parse_args()
PATH = parsed_args.path[0]

(f"–í —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ {PATH}")

get_dir_info(PATH)

# py S15_HW.py ..\S15
